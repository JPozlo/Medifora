apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.misolova.medifora"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    def kotlin_coroutines_version = "1.3.9"
    def room_version = "2.2.5"
    def lifecycle_version = "2.2.0"
    def nav_version = "2.3.0"
    def glide_version = "4.11.0"
    def play_services_version = "17.0.0"
    def dagger_android_version = "2.23.2"
    def dagger_hilt_version = "2.28-alpha"
    def dagger_hilt_androidx_lifecycle_version = "1.0.0-alpha01"
    def dagger_hilt_tests_version = "2.28-alpha"
    def dagger_core_version = "2.25.4"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.firebase:firebase-auth:19.3.2'
    implementation 'com.google.firebase:firebase-firestore:21.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // RXJava 3
    implementation "io.reactivex.rxjava2:rxjava:2.1.1"

    //RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Material Design
    implementation 'com.google.android.material:material:1.2.0'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutine Lifecycle
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // Lifecycle Extension
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Activity KTX for viewModels()
    implementation 'androidx.activity:activity-ktx:1.1.0'

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$dagger_hilt_androidx_lifecycle_version"
    kapt "androidx.hilt:hilt-compiler:$dagger_hilt_androidx_lifecycle_version"
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_tests_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_tests_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_tests_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_tests_version"

    // Dagger Core
    implementation "com.google.dagger:dagger:$dagger_core_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_core_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_android_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_android_version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger_android_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Google Maps Location Services
    implementation "com.google.android.gms:play-services-location:$play_services_version"
    implementation "com.google.android.gms:play-services-maps:$play_services_version"

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

}
